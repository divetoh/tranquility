"""0.2.01 Migration to PostgreSQL

Revision ID: a9dc3ed4b0e7
Revises: 
Create Date: 2022-07-06 15:08:30.017937

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a9dc3ed4b0e7'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('uid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('full_name', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=80), nullable=False),
    sa.Column('hashed_password', sa.String(length=80), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('coreactivity', sa.Integer(), nullable=True),
    sa.Column('coretasklist', sa.Integer(), nullable=True),
    sa.Column('created_dt', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_uid'), 'user', ['uid'], unique=False)
    op.create_table('dailytask',
    sa.Column('uid', sa.Integer(), nullable=False),
    sa.Column('user', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('name', sa.String(length=400), nullable=False),
    sa.ForeignKeyConstraint(['user'], ['user.uid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_dailytask_uid'), 'dailytask', ['uid'], unique=False)
    op.create_index(op.f('ix_dailytask_user'), 'dailytask', ['user'], unique=False)
    op.create_table('daystate',
    sa.Column('user', sa.Integer(), nullable=False),
    sa.Column('statedate', sa.Date(), nullable=False),
    sa.Column('description', sa.String(length=2048), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('complited', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user'], ['user.uid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user', 'statedate')
    )
    op.create_index(op.f('ix_daystate_statedate'), 'daystate', ['statedate'], unique=False)
    op.create_index(op.f('ix_daystate_user'), 'daystate', ['user'], unique=False)
    op.create_table('jsondoc',
    sa.Column('uid', sa.Integer(), nullable=False),
    sa.Column('user', sa.Integer(), nullable=False),
    sa.Column('doctype', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('jsondoc', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['user'], ['user.uid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_jsondoc_uid'), 'jsondoc', ['uid'], unique=False)
    op.create_index(op.f('ix_jsondoc_user'), 'jsondoc', ['user'], unique=False)
    op.create_table('markdown',
    sa.Column('uid', sa.Integer(), nullable=False),
    sa.Column('user', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('md', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['user'], ['user.uid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_markdown_uid'), 'markdown', ['uid'], unique=False)
    op.create_index(op.f('ix_markdown_user'), 'markdown', ['user'], unique=False)
    op.create_table('memorizecategory',
    sa.Column('uid', sa.Integer(), nullable=False),
    sa.Column('user', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=1024), nullable=False),
    sa.Column('color', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user'], ['user.uid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_memorizecategory_uid'), 'memorizecategory', ['uid'], unique=False)
    op.create_index(op.f('ix_memorizecategory_user'), 'memorizecategory', ['user'], unique=False)
    op.create_table('memorizestack',
    sa.Column('uid', sa.Integer(), nullable=False),
    sa.Column('user', sa.Integer(), nullable=False),
    sa.Column('section', sa.String(length=100), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('name', sa.String(length=250), nullable=False),
    sa.Column('description', sa.String(length=1024), nullable=False),
    sa.ForeignKeyConstraint(['user'], ['user.uid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_memorizestack_uid'), 'memorizestack', ['uid'], unique=False)
    op.create_index(op.f('ix_memorizestack_user'), 'memorizestack', ['user'], unique=False)
    op.create_table('regulartask',
    sa.Column('uid', sa.Integer(), nullable=False),
    sa.Column('user', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('name', sa.String(length=400), nullable=False),
    sa.Column('nextdate', sa.Date(), server_default=sa.text('now()'), nullable=True),
    sa.Column('period', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user'], ['user.uid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_regulartask_uid'), 'regulartask', ['uid'], unique=False)
    op.create_index(op.f('ix_regulartask_user'), 'regulartask', ['user'], unique=False)
    op.create_table('dailytaskstate',
    sa.Column('statedate', sa.Date(), nullable=False),
    sa.Column('dailytask', sa.Integer(), nullable=False),
    sa.Column('state', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['dailytask'], ['dailytask.uid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('statedate', 'dailytask')
    )
    op.create_index(op.f('ix_dailytaskstate_dailytask'), 'dailytaskstate', ['dailytask'], unique=False)
    op.create_index(op.f('ix_dailytaskstate_statedate'), 'dailytaskstate', ['statedate'], unique=False)
    op.create_table('memorizecard',
    sa.Column('uid', sa.Integer(), nullable=False),
    sa.Column('stack', sa.Integer(), nullable=False),
    sa.Column('category', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('obverse', sa.String(length=1024), nullable=False),
    sa.Column('reverse', sa.String(length=4096), nullable=False),
    sa.Column('hint', sa.String(length=1024), nullable=True),
    sa.ForeignKeyConstraint(['category'], ['memorizecategory.uid'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['stack'], ['memorizestack.uid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_memorizecard_category'), 'memorizecard', ['category'], unique=False)
    op.create_index(op.f('ix_memorizecard_stack'), 'memorizecard', ['stack'], unique=False)
    op.create_index(op.f('ix_memorizecard_uid'), 'memorizecard', ['uid'], unique=False)
    op.create_table('regulartaskstate',
    sa.Column('statedate', sa.Date(), nullable=False),
    sa.Column('regulartask', sa.Integer(), nullable=False),
    sa.Column('state', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['regulartask'], ['regulartask.uid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('statedate', 'regulartask')
    )
    op.create_index(op.f('ix_regulartaskstate_regulartask'), 'regulartaskstate', ['regulartask'], unique=False)
    op.create_index(op.f('ix_regulartaskstate_statedate'), 'regulartaskstate', ['statedate'], unique=False)
    op.create_table('memorizecardhistory',
    sa.Column('uid', sa.Integer(), nullable=False),
    sa.Column('user', sa.Integer(), nullable=True),
    sa.Column('card', sa.Integer(), nullable=True),
    sa.Column('state', sa.Integer(), nullable=False),
    sa.Column('statedate', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['card'], ['memorizecard.uid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user'], ['user.uid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_memorizecardhistory_card'), 'memorizecardhistory', ['card'], unique=False)
    op.create_index(op.f('ix_memorizecardhistory_uid'), 'memorizecardhistory', ['uid'], unique=False)
    op.create_index(op.f('ix_memorizecardhistory_user'), 'memorizecardhistory', ['user'], unique=False)
    op.create_table('memorizecardstate',
    sa.Column('user', sa.Integer(), nullable=False),
    sa.Column('card', sa.Integer(), nullable=False),
    sa.Column('state', sa.Integer(), nullable=False),
    sa.Column('lastdate', sa.Date(), nullable=True),
    sa.Column('nextdate', sa.Date(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['card'], ['memorizecard.uid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user'], ['user.uid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user', 'card')
    )
    op.create_index(op.f('ix_memorizecardstate_card'), 'memorizecardstate', ['card'], unique=False)
    op.create_index(op.f('ix_memorizecardstate_user'), 'memorizecardstate', ['user'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_memorizecardstate_user'), table_name='memorizecardstate')
    op.drop_index(op.f('ix_memorizecardstate_card'), table_name='memorizecardstate')
    op.drop_table('memorizecardstate')
    op.drop_index(op.f('ix_memorizecardhistory_user'), table_name='memorizecardhistory')
    op.drop_index(op.f('ix_memorizecardhistory_uid'), table_name='memorizecardhistory')
    op.drop_index(op.f('ix_memorizecardhistory_card'), table_name='memorizecardhistory')
    op.drop_table('memorizecardhistory')
    op.drop_index(op.f('ix_regulartaskstate_statedate'), table_name='regulartaskstate')
    op.drop_index(op.f('ix_regulartaskstate_regulartask'), table_name='regulartaskstate')
    op.drop_table('regulartaskstate')
    op.drop_index(op.f('ix_memorizecard_uid'), table_name='memorizecard')
    op.drop_index(op.f('ix_memorizecard_stack'), table_name='memorizecard')
    op.drop_index(op.f('ix_memorizecard_category'), table_name='memorizecard')
    op.drop_table('memorizecard')
    op.drop_index(op.f('ix_dailytaskstate_statedate'), table_name='dailytaskstate')
    op.drop_index(op.f('ix_dailytaskstate_dailytask'), table_name='dailytaskstate')
    op.drop_table('dailytaskstate')
    op.drop_index(op.f('ix_regulartask_user'), table_name='regulartask')
    op.drop_index(op.f('ix_regulartask_uid'), table_name='regulartask')
    op.drop_table('regulartask')
    op.drop_index(op.f('ix_memorizestack_user'), table_name='memorizestack')
    op.drop_index(op.f('ix_memorizestack_uid'), table_name='memorizestack')
    op.drop_table('memorizestack')
    op.drop_index(op.f('ix_memorizecategory_user'), table_name='memorizecategory')
    op.drop_index(op.f('ix_memorizecategory_uid'), table_name='memorizecategory')
    op.drop_table('memorizecategory')
    op.drop_index(op.f('ix_markdown_user'), table_name='markdown')
    op.drop_index(op.f('ix_markdown_uid'), table_name='markdown')
    op.drop_table('markdown')
    op.drop_index(op.f('ix_jsondoc_user'), table_name='jsondoc')
    op.drop_index(op.f('ix_jsondoc_uid'), table_name='jsondoc')
    op.drop_table('jsondoc')
    op.drop_index(op.f('ix_daystate_user'), table_name='daystate')
    op.drop_index(op.f('ix_daystate_statedate'), table_name='daystate')
    op.drop_table('daystate')
    op.drop_index(op.f('ix_dailytask_user'), table_name='dailytask')
    op.drop_index(op.f('ix_dailytask_uid'), table_name='dailytask')
    op.drop_table('dailytask')
    op.drop_index(op.f('ix_user_uid'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
